apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "23"
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"docker-server-i:8889"},"fieldPath":"spec.template.spec.containers[?(@.name==\"docker-server-i\")].image"}]'
    openshift.io/generated-by: OpenShiftNewApp
  creationTimestamp: "2024-08-05T08:44:38Z"
  generation: 25
  labels:
    app: docker-server-i
    app.kubernetes.io/component: docker-server-i
    app.kubernetes.io/instance: docker-server-i
  name: docker-server-i
  namespace: "{{ .Release.Namespace }}"
  resourceVersion: "555233356"
  uid: 035b9d1b-07bb-4a25-aed7-2bdcd800e294
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      deployment: docker-server-i
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
      creationTimestamp: null
      labels:
        deployment: docker-server-i
    spec:
      initContainers:
      - name: delay-start
        image: busybox
        command: ['sh', '-c', 'echo "Waiting for 60 seconds..."; sleep 60']
        # This initContainer will pause for 60 seconds before allowing the main container to start.
      containers:
      - env:
        - name: MONGODB_HOST
          valueFrom:
            configMapKeyRef:
              key: MONGODB_HOST
              name: mongo-config
        image: avivfre/docker-server-i:{{ .Values.imagesTags.server }}
        imagePullPolicy: IfNotPresent
        name: docker-server-i
        ports:
        - containerPort: 3000
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2024-08-05T08:44:38Z"
    lastUpdateTime: "2024-08-18T14:54:22Z"
    message: ReplicaSet "docker-server-i-5675875769" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  - lastTransitionTime: "2024-08-19T08:44:35Z"
    lastUpdateTime: "2024-08-19T08:44:35Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 25
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
